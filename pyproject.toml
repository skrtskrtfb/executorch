[build-system]
requires = [
  "cmake",  # For building binary targets in the wheel.
  "setuptools>=41",  # For building the pip package contents.
  "tomli",  # Imported by extract_sources.py when using python < 3.11.
  "wheel",  # For building the pip package archive.
  "zstd",  # Imported by resolve_buck.py.
  "setuptools-git-versioning>=2.0,<3",  # For constructing the version string.
]
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
# Resolves the dynamic version in the project section.
enabled = true

[project]
name = "executorch"
# setuptools-git-versioning will derive the version from the git repo state.
dynamic = ["version"]
# Python dependencies required for development
dependencies=[
  "expecttest",
  "flatbuffers",
  "hypothesis",
  "numpy",
  "packaging",
  "pandas",
  "parameterized",
  "pytest",
  "pytest-xdist",
  "pyyaml",
  "ruamel.yaml",
  "sympy",
  "tabulate",
]

# Tell setuptools to generate commandline wrappers for tools that we install
# under data/bin in the pip package. This will put these commands on the user's
# path.
[project.scripts]
flatc = "executorch.data.bin:flatc"

[tool.setuptools.package-data]
# TODO(dbort): Prune /test[s]/ dirs, /third-party/ dirs, yaml files that we
# don't need.
"*" = [
  # Some backends like XNNPACK need their .fbs files.
  "*.fbs",
  # Some kernel libraries need their .yaml files.
  "*.yaml",
]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc"]

[tool.usort]
# Do not try to put "first-party" imports in their own section.
first_party_detection = false
